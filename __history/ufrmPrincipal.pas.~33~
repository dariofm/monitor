unit ufrmPrincipal;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.Grids, Vcl.DBGrids,
  Vcl.StdCtrls, cxGraphics, cxControls, cxLookAndFeels, cxLookAndFeelPainters,
  cxContainer, cxEdit, dxSkinsCore, dxSkinsDefaultPainters, cxTextEdit,inifiles,
  cxMaskEdit, cxSpinEdit, Vcl.Menus, Vcl.Samples.Spin, cxButtons, cxDropDownEdit,Printers;

type
  TfrmPrincipal = class(TForm)
    TimeMonitor: TTimer;
    lblUltimaNota: TLabel;
    lblStatus: TLabel;
    cxButton1: TcxButton;
    DBGrid1: TDBGrid;
    cxCbUsuario: TcxComboBox;
    cxButton2: TcxButton;
    procedure TimeMonitorTimer(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure cxButton1Click(Sender: TObject);
    procedure cxCbUsuarioPropertiesCloseUp(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmPrincipal: TfrmPrincipal;
  intervalo,usuario:string;

implementation

{$R *.dfm}

uses udmDados, ufrmConfig;

procedure TfrmPrincipal.cxButton1Click(Sender: TObject);
begin
  SetWindowPos(frmPrincipal.handle, HWND_NOTOPMOST, frmPrincipal.Left, frmPrincipal.Top,frmPrincipal.Width, frmPrincipal.Height, 0);
  TimeMonitor.Enabled := false;

  frmConfig.ShowModal;

end;

procedure TfrmPrincipal.cxCbUsuarioPropertiesCloseUp(Sender: TObject);
var
  ArqINI: TIniFile;
begin
  // Cria o arquivo "Configuracao.ini" no mesmo diretório da aplicação, com o nome Config.ini
  ArqINI := TIniFile.Create(ExtractFilePath(Application.ExeName) + 'Configuracao.ini');
  try
    // Grava os dados no arquivo "Config.ini"
    ArqINI.WriteString('Parametro', 'Usuario', cxCbUsuario.Text);

  finally
    // Liberar a referência do arquivo da memória
    ArqINI.Free;
  end;

end;

procedure TfrmPrincipal.FormShow(Sender: TObject);
var
  I:Integer;
  impressoras:TPrinter;
  ArquivoConfig: TIniFile;
begin
  impressoras:=TPrinter.Create;
  try
  for i := 0 to Printer.Printers. Count - 1 do
  begin

    frmConfig.cxBoxImpressora.Properties.Items.Add(Printer.Printers.Strings[i] );
    frmConfig.cxBoxImpressora.ItemIndex:=0;
  end;
  finally
  impressoras.free;
  end;

  ArquivoConfig := TIniFile.Create(ExtractFilePath(Application.ExeName) + 'Configuracao.ini');
  TimeMonitor.Interval :=  TRUNC(ArquivoConfig.ReadInteger('Parametro', 'Intervalo', 0)*1000);
  frmConfig.SpinTempo.Value := ArquivoConfig.ReadInteger('Parametro', 'Intervalo', 0);

  try
   frmConfig.cxBoxImpressora.Text :=  ArquivoConfig.ReadString('Parametro', 'Impressora', '');
  except
   frmConfig.cxBoxImpressora.Text := '';
  end;

  dmDados.tblUsuario.First;
  cxCbUsuario.Clear;
  while not dmDados.tblUsuario.Eof do
  begin

    cxCbUsuario.Properties.Items.Add(dmDados.tblUsuario.FieldByName('nome').AsString);
    cxCbUsuario.Text := ArquivoConfig.ReadString('Parametro', 'Usuario', '');
    usuario := ArquivoConfig.ReadString('Parametro', 'Usuario', '');
    dmDados.tblUsuario.Next;
  end;

  ArquivoConfig.Free;


end;

procedure TfrmPrincipal.TimeMonitorTimer(Sender: TObject);
begin


  lblStatus.Caption := 'Status: Monitorando...';
  dmDados.qryNota.close;
  dmDados.qryNota.Params[0].Value := usuario;
  dmDados.qryNota.Params[1].Value := 0;
  dmDados.qryNota.open;

  if dmDados.qryNota.RecordCount > 0   then
  begin
    TimeMonitor.Enabled := false;

    if TimeMonitor.Enabled = false then
    begin

      SetWindowPos(frmPrincipal.handle, HWND_TOPMOST, frmPrincipal.Left, frmPrincipal.Top,frmPrincipal.Width, frmPrincipal.Height, 0);
      frmPrincipal.FormStyle := fsStayOnTop;


    end;


    lblUltimaNota.Caption := 'Última Nota: '+dmDados.qryNota.FieldByName('NUMERO').AsString;

    dmDados.frxReportCupom.Clear;
    dmDados.frxReportCupom.LoadFromFile('C:\Kimmera Monitor\CupomMei.fr3');

    dmDados.frxReportCupom.Variables['NUMERO']             := QuotedStr(Format('%10.10d',[dmDados.qryNota.FieldByName('Numero').AsInteger]));
    dmDados.frxReportCupom.Variables['Nome_Emitente']      := QuotedStr(dmDados.tblEmitenteNOMEFANTASIA.AsString);
    dmDados.frxReportCupom.Variables['Nome_Endereco']      := QuotedStr(dmDados.tblEmitenteENDERECO.AsString+', '+dmDados.tblEmitenteNUMERO.AsString+' - '+dmDados.tblEmitenteBAIRRO.AsString);
    dmDados.frxReportCupom.Variables['Nome_Cliente']       := QuotedStr(dmDados.qryNota.FieldByName('Usuario').AsString);
    dmDados.frxReportCupom.Variables['Emissao']            := QuotedStr(DateToStr(date));

    dmDados.frxReportCupom.Variables['hora']               := QuotedStr(TimeToStr(time));





    //if Application.MessageBox('Imprimir Pedido?','Atenção',MB_ICONQUESTION + MB_YESNO) = 6 then
    //begin

      dmDados.frxReportCupom.PrintOptions.Printer := frmConfig.cxBoxImpressora.Text;
      dmDados.frxReportCupom.PrintOptions.ShowDialog:= false;
      dmDados.frxReportCupom.PrepareReport;
      dmDados.frxReportCupom.Print;

    //end;





  SetWindowPos(frmPrincipal.handle, HWND_NOTOPMOST, frmPrincipal.Left, frmPrincipal.Top,frmPrincipal.Width, frmPrincipal.Height, 0);
  lblStatus.Caption := 'Status: Imprimindo...';

  end;

  dmDados.qryGen.SQL.Clear;
  dmDados.qryGen.SQL.Text := 'UPDATE NOTA_MANUAL SET IMPRESSO = :P0 WHERE USUARIO = :P1 AND IMPRESSO = :P2';
  dmDados.qryGen.Params[0].Value := 1;
  dmDados.qryGen.Params[1].Value := usuario;
  dmDados.qryGen.Params[2].Value := 0;
  dmDados.qryGen.ExecSQL;

  TimeMonitor.Enabled := true;

end;

end.
